[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fasthtml-otel"
version = "0.1.0"
description = "Real-time OpenTelemetry streaming components for FastHTML"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Christoffer BjÃ¶rkskog", email = "christoffer.bjorkskog@novia.fi"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
]
keywords = ["fasthtml", "opentelemetry", "observability", "streaming", "telemetry"]
requires-python = ">=3.11"
dependencies = [
    "python-fasthtml",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "sse-starlette>=1.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
example = [
    "pydantic-ai>=0.0.8",
    "uvicorn>=0.24.0",
]

[project.urls]
Homepage = "https://virtualseatrial.fi/"
Repository = "https://github.com/Novia-RDI-Seafaring/ft-otel"
Documentation = "https://github.com/Novia-RDI-Seafaring/ft-otel#readme"
Issues = "https://github.com/Novia-RDI-Seafaring/ft-otel/issues"
Funding = "https://virtualseatrial.fi/"

[tool.hatch.build.targets.wheel]
packages = ["fasthtml_otel"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]